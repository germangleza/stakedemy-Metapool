// Contracts
const nearContract = "dev-1687559106965-31298632135911";

const nearusd = fetch(
  "https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd"
);

const precio = nearusd.body["near"].usd;
const dollar2near = Math.round((100 / precio) * 100) / 100;

const aurora2usd = fetch(
  "https://api.coingecko.com/api/v3/simple/price?ids=aurora-near&vs_currencies=usd"
);
const precioAU = aurora2usd.body["aurora-near"].usd;
const dollar2AU = Math.round((100 / precioAU) * 100) / 100;

State.init({
  selected: "NEAR",
  balance: 0,
});

const handleSelect2 = (data) => {
  State.update({ selected: data.target.value });
  if (state.selected === "NEAR") {
    State.update({ balance: dollar2near });
  } else if (state.selected === "AUR") {
    State.update({ balance: dollar2AU });
  }
};

// Calls

const onBtnClick = () => {
  if (!state.stAmount) {
    return;
  }

  const amount = state.stAmount * 1000000000000000000000000;

  Near.call(nearContract, "deposit", {}, 0, amount);
};

// Contracts

const lidoContract = "0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F";

const mainnetLidoContract = "0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f";
const gorliLidoContract = "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506";
const tokenDecimals = 18;
const contract = "0x6B3595068778DD592e39A122f4f5a5cF09C90fE2";

//const network = "gorli"; // "gorli" // "rinkeby" // "mainnet"

const network = "mainnet";
switch (network) {
  case "gorli":
    lidoContract = gorliLidoContract;
    break;
  case "mainnet":
    lidoContract = mainnetLidoContract;
    break;
  case "ropsten":
    lidoContract = mainnetLidoContract;
    break;
  default:
    lidoContract = mainnetLidoContract;
    break;
}

const handleSelect = (data) => {
  console.log(data.target.value);
  let info = data.target.value.split("-");
  State.update({ tokenTo: info[1] });
  if (info[0] == "near") {
    State.update({ tokenSelected: 0 });
  } else if (info[0] == "aurora") {
    State.update({ tokenSelected: 1 });
  }
  console.log(state.tokenSelected);
  contract = data.target.value;
};

const lidoAbi = fetch(
  "https://raw.githubusercontent.com/cloudmex/sushiswap-bos/main/abi-sushi.json"
);

console.log(lidoAbi);

if (!lidoAbi.ok) {
  return "Loading";
}

const iface = new ethers.utils.Interface(lidoAbi.body);

const submitEthers = (stAmount, _referral) => {
  if (!stAmount) {
    console.log("contrato: ", state.tokenTo);
    return console.log("Amount is missing");
  }

  const erc20 = new ethers.Contract(
    lidoContract,
    lidoAbi.body,
    Ethers.provider().getSigner()
  );
  console.log("11111", erc20);
  let amount = ethers.utils.parseUnits(stAmount, tokenDecimals).toHexString();

  let ARR = ["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", state.tokenTo];

  console.log("contract: ", contract);

  console.log("amountlol", amount);
  console.log("ARRlol", ARR);
  console.log(
    "Ethers.provider().getSigner()l",
    Ethers.provider().getSigner().getAddress()
  );
  console.log("Sender:", state.sender);
  console.log("block.timestamp + 60 1678849571");
  console.log("token to swap: ", state.tokenTo);
  erc20
    .swapExactETHForTokens(
      amount,
      ARR,
      //Ethers.provider().getSigner(),
      state.sender,
      Date.now() + 180,
      { value: amount, gasLimit: 3e5 }
    )
    .then((transactionHash) => {
      console.log("transactionHash is " + transactionHash);
    });
};

// DETECT SENDER

if (state.sender === undefined) {
  const accounts = Ethers.send("eth_requestAccounts", []);
  if (accounts.length) {
    State.update({ sender: accounts[0] });
    console.log("set sender", accounts[0]);
  }
}

// FETCH CSS

const cssFont = fetch(
  "https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800"
).body;

const css = `
.LidoContainer{
    box-sizing: border-box;
    margin: 0px auto;
    min-width: 320px;
    width: 100%;
    padding: 0px 32px;
    max-width: 560px;
    position: relative;
    margin-top: 8px;
    margin-bottom: 8px;
}

.Header{
    font-weight: 800;
    font-size: 26px;
    margin-bottom: 0.2em;
    line-height: 1.2em;
    text-align: center;
}

.SubHeader{
    font-weight: 500;
    color: #FF79D8;
    margin-bottom: 16px;
    font-size: 12px;
    line-height: 1.5em;
    text-align: center;
};

.LidoForm{
    background: linear-gradient(65.21deg, rgb(255, 94, 88) 19.1%, rgb(255, 212, 84) 100%);
    margin-bottom: -20px;
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
    padding-bottom: 52px;
    font-weight: 400;
    font-size: 12px;
    line-height: 1.6em;
    border-radius: 20px;
    margin: 0px;
    padding: 32px;
    box-shadow: none;
    color: #fff;    
}

.LidoFormTopContainer{
    margin-top: 0px;
    display: flex;
    margin: 20px 0px;
}

.LidoFormTopContainerLeft{
    margin-right: 18px;
    flex-basis: 50%;
    -webkit-box-flex: 1;
    flex-grow: 1;
    font-size: 12px;
    line-height: 1.6em;
}

.LidoFormTopContainerLeftContent1{
    display: flex;
    flex-direction: row;
    -webkit-box-pack: start;
    justify-content: flex-start;
    -webkit-box-align: center;
    align-items: center;
}

.LidoFormTopContainerLeftContent1Container{
    display: flex;
    -webkit-box-align: center;
    align-items: center;
}

.LidoFormTopContainerLeftContent1Circle{
    background-color: #53BA95;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-left: 8px;
}

.LidoFormTopContainerLeftContent2{
    margin-top: 2px;
    font-size: 18px;
    line-height: 1.4em;
    font-weight: 800;
    white-space: nowrap;
    display: block;
}

.LidoFormTopContainerRight{
    align-self: stretch;
    display: flex;
    flex: 1 1 50%;
    -webkit-box-flex: 1;
    overflow: hidden;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: end;
    justify-content: flex-end;
    margin-left: auto;
}

.LidoFormTopContainerRightContent1{
    max-width: 100%;
    box-sizing: border-box;
    overflow: hidden;
    margin: 0px;
    border-radius: 1000px;
    padding: 4px;
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    background: rgba(0, 0, 0, .2);
    color: #fff;    
}

.LidoFormTopContainerRightContent1Text{
    padding: 0px 6px;
    font-weight: 400;
}

.LidoSplitter{
    box-sizing: border-box;
    list-style: none;
    opacity: 0.1;
    padding: 0px;
    flex-shrink: 0;
    -webkit-box-flex: 0;
    flex-grow: 0;
    border-top: 1px solid currentcolor;
    width: 100%;
    height: 0px;
    margin: 0px;
}

.LidoFormBottomContainer{
    margin-bottom: 0px;
    display: flex;
    margin: 20px 0px;
}

.LidoAprContainer{
    margin-right: 0px;
    flex-basis: 50%;
    -webkit-box-flex: 1;
    flex-grow: 1;
    font-size: 12px;
    line-height: 1.6em;
}

.LidoAprTitle{
    display: flex;
    flex-direction: row;
    -webkit-box-pack: start;
    justify-content: flex-start;
    -webkit-box-align: center;
    align-items: center;
}

.LidoAprValue{
    margin-top: 2px;
    font-size: 16px;
    line-height: 1.4em;
    font-weight: 800;
    white-space: nowrap;
    color: rgb(97, 183, 95);
    font-size: 16px;
    line-height: 1.4em;
    font-weight: 800;
    white-space: nowrap;
}        
}

.LidoStakeForm{
    font-weight: 400;
    font-size: 12px;
    line-height: 1.6em;
    border-radius: 0px 0px 20px 20px;
    margin: 0px;
    padding: 32px;
    box-shadow: none;
    background: #eee;
    color: #7a8aa0;
    margin-top: -30px;
}

.LidoStakeFormInputContainer{
    margin-bottom: 16px;
    z-index: 2;
    position: relative;
    display: inline-flex;
    border-width: 1px;
    border-style: solid;
    border-image: initial;
    border-radius: 10px;
    -webkit-box-align: stretch;
    align-items: stretch;
    box-sizing: border-box;
    padding: 0px 15px;
    cursor: text;
    transition: border-color 100ms ease 0s;
    width: 100%;
    background: #fff;
    border-color: rgba(0,10,61,.12);
    color: #273852;
}

.LidoStakeFormInputContainerSpan1{
    -webkit-box-flex: 0;
    flex-grow: 0;
    flex-shrink: 0;
    cursor: inherit;
    display: flex;
    -webkit-box-align: center;
    align-items: center;
    padding-right: 16px;
}

.selectCSS{
    font-weight: 400;
    font-size: 14px;
    display: flex;
    border: none;
    -webkit-box-flex: 1;
    flex-grow: 1;
    position: relative;
    padding: 17px 0px;
    color: #273852;
}

.LidoStakeFormInputContainerSpan2{
    font-weight: 400;
    font-size: 14px;
    display: flex;
    -webkit-box-flex: 1;
    flex-grow: 1;
    position: relative;
    padding: 17px 0px;
}

.LidoStakeFormInputContainerSpan2Input{
    width: 100%;
    font-family: inherit;
    font-weight: 400;
    font-size: 1em;
    line-height: 1.43em;
    padding: 0px;
    border-radius: 0px;
    background: transparent;
    box-shadow: none;
    border: none;
    outline: none;
    position: relative;
    top: 0px;
    color: #273852;
}

.LidoStakeFormInputContainerSpan3{
    -webkit-box-flex: 0;
    flex-grow: 0;
    flex-shrink: 0;
    cursor: inherit;
    display: flex;
    -webkit-box-align: center;
    align-items: center;
    padding-left: 16px;
}

.LidoStakeFormInputContainerSpan3Content{
    cursor: pointer;
    letter-spacing: 0.4px;
    box-sizing: border-box;
    margin: 0px;
    border: none;
    outline: none;
    white-space: nowrap;
    overflow: hidden;
    position: relative;
    background: transparent;
    font-family: inherit;
    font-weight: 700;
    width: auto;
    line-height: 1em;
    font-size: 10px;
    border-radius: 6px;
    padding: 11px 16px;
    min-width: 50px;
    color: #fa7aad;
    &::before {
            display: block;
            background-color: #f72277;
            transition: opacity 100ms ease 0s;
            opacity: 0.1;
            content: "";
            position: absolute;
            inset: 0px;
            pointer-events: none;
            border-radius: inherit;
        }    
}

.LidoStakeFormInputContainerSpan3Max{
    position: relative;
    pointer-events: none;
    visibility: visible;
}

.LidoStakeFormSubmitContainer{
    cursor: pointer;
    box-sizing: border-box;
    margin: 0px;
    border: none;
    outline: none;
    white-space: nowrap;
    overflow: hidden;
    position: relative;
    background-image: initial;
    background-position: initial;
    background-size: initial;
    background-repeat: initial;
    background-attachment: initial;
    background-origin: initial;
    background-clip: initial;
    font-family: inherit;
    font-weight: 700;
    width: 100%;
    line-height: 1em;
    font-size: 14px;
    border-radius: 10px;
    padding: 21px 44px;
    min-width: 120px;
    color: #fff;
    background-color: #FF5E58;
    transition: background-color 100ms ease 0s;
    &:hover {
        background-color: #FFD454;
    }
}

.LidoFooterContainer{
    font-weight: 400;
    font-size: 12px;
    line-height: 1.6em;
}

.LidoFooterRaw{
    margin-top: 0px;
    display: flex;
    margin: 16px 0px;
    font-weight: 400;
    font-size: 12px;
    line-height: 1.6em;
}

.LidoFooterRawLeft{
    color: #7a8aa0;
    -webkit-box-flex: 1;
    flex-grow: 1;
}

.LidoFooterRawRight{
    color: #273852;
    text-align: right;
    margin-left: 32px;
    -webkit-box-flex: 1;
    flex-grow: 1;
}
`;

const Main = styled.div`
  display: grid;
  gap: 20px;
  grid-template-columns: 352px minmax(0, 1fr);
  align-items: start;

  @media (max-width: 1200px) {
    grid-template-columns: minmax(0, 1fr);
  }
`;
const LogoImage = styled.img`
  width: 252px; 
  margin-right: 12px;
  margin-top: 1px; 
`;
const SidebarWrapper = styled.div`
  position: relative;
  z-index: 5;
  margin-top: -55px;

  @media (max-width: 900px) {
    margin-top: -40px;
  }
`;

const Content = styled.div`
  .post {
    padding-left: 0;
    padding-right: 0;
  }
`;

const Title = styled.h1`
  font-weight: 600;
  font-size: ${(p) => p.size || "25px"};
  line-height: 1.2em;
  color: #11181c;
  margin: ${(p) => (p.margin ? "0 0 24px" : "0")};
  overflow-wrap: anywhere;
`;

const Tabs = styled.div`
  display: flex;
  height: 48px;
  border-bottom: 1px solid #eceef0;
  margin-bottom: 72px;
  overflow: auto;
  scroll-behavior: smooth;

  @media (max-width: 1200px) {
    background: #f8f9fa;
    border-top: 1px solid #eceef0;
    margin: 0 -12px 48px;

    > * {
      flex: 1;
    }
  }
`;

const TabsButton = styled.a`
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  font-weight: 600;
  font-size: 22px;
  padding: 0 12px;
  position: relative;
  color: ${(p) => (p.selected ? "#11181C" : "#687076")};
  background: none;
  border: none;
  outline: none;
  text-align: center;
  text-decoration: none !important;

  &:hover {
    color: #11181c;
  }

  &::after {
    content: "";
    display: ${(p) => (p.selected ? "block" : "none")};
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: #59e692;
  }
`;

if (!cssFont || !css) return "";

if (!state.theme) {
  State.update({
    theme: styled.div`
    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
    ${cssFont}
    ${css}
`,
  });
}
const Theme = state.theme;

// OUTPUT UI

const getSender = () => {
  return !state.sender
    ? ""
    : state.sender.substring(0, 6) +
        "..." +
        state.sender.substring(state.sender.length - 4, state.sender.length);
};

return (
  <Theme>
    <div
      className="container-fluid bg-warning py-4"
      style={{
        backgroundImage:
          'url("https://somoscryptomx.com/wp-content/uploads/2023/05/stakedemy.png")',
        backgroundPosition: "center",
        backgroundSize: "cover",
        backgroundAttachment: "fixed",
        perspective: "1px",
        overflowX: "hidden",
        overflowY: "auto",
      }}
    >
      <div className="d-flex justify-content-start">
        <img
          src="https://raw.githubusercontent.com/Davitcoin/OpenWeb-CryptoMX/main/logoNegro.png"
          alt="Logo del proyecto"
          style={{ width: "50px" }}
        />
      </div>
      <LogoImage
        src="https://somoscryptomx.com/wp-content/uploads/2023/05/Recurso-1@4x-8-2048x519.png"
        alt="Company Logo"
      />
      <Tabs>
        <TabsButton
          href={`${url}&tab=inicio`}
          selected={state.selectedTab === "inicio"}
        >
          Inicio
        </TabsButton>

        <TabsButton
          href={`${url}&tab=nosotros`}
          selected={state.selectedTab === "nosotros"}
        >
          Nosotros
        </TabsButton>

        <TabsButton
          href={`${url}&tab=waitlist`}
          selected={state.selectedTab === "waitlist"}
        >
          Waitlist
        </TabsButton>

        <TabsButton
          href={`${url}&tab=whitepaper`}
          selected={state.selectedTab === "whitepaper"}
        >
          Whitepaper
        </TabsButton>

        <TabsButton
          href={`${url}&tab=comenzar`}
          selected={state.selectedTab === "comenzar"}
        >
          Comenzar
        </TabsButton>
      </Tabs>
      <h1 className="text-center text-danger mb-4">
        Únete y comienza a aprender y ganar
      </h1>
      <p>.</p>
      <div className="LidoContainer">
        <div className="LidoForm">
          {context.accountId && (
            <>
              <div className="LidoFormTopContainer">
                <div className="LidoFormTopContainerLeft">
                  <div className="LidoFormTopContainerLeftContent1"></div>
                  <div className="LidoFormTopContainerLeftContent2">
                    <span>
                      {state.selected === "NEAR" && (
                        <p>Precio en NEAR:{dollar2near}</p>
                      )}
                      {state.selected === "AUR" && (
                        <p>Precio en AURORA:{dollar2AU}</p>
                      )}
                    </span>
                  </div>
                </div>
                <div className="LidoFormTopContainerRight">
                  <div className="LidoFormTopContainerRightContent1">
                    <div className="LidoFormTopContainerRightContent1Text">
                      <span>
                        <b>Account:</b> {context.accountId}
                      </span>
                    </div>
                  </div>
                </div>
              </div>
              <div className="LidoSplitter" />
            </>
          )}
        </div>
        <div className="LidoStakeForm">
          <div className="mb-2 LidoStakeFormInputContainer">
            {/* Select and Images */}
            <select
              name="currency"
              id="token"
              className="selectCSS"
              onChange={handleSelect2}
            >
              <option value="NEAR">NEAR</option>
              <option value="AUR">AURORA</option>
            </select>
          </div>

          <div className="LidoStakeFormInputContainer">
            <span className="LidoStakeFormInputContainerSpan1">
              {state.selected == "NEAR" ? (
                <img
                  src="https://aurora.dev/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F50156%2F1661863968-icon_nm.svg%3Fh%3D40%26w%3D40&w=48&q=75"
                  alt="NEAR"
                  style={{
                    background: "white",
                    padding: "5px",
                    borderRadius: "10px",
                    height: "30px",
                  }}
                />
              ) : (
                <img
                  src="https://auroracloud.dev/static/new-landing/aurora-business-big.svg"
                  alt="NEAR"
                  style={{
                    background: "white",
                    padding: "5px",
                    borderRadius: "10px",
                    height: "30px",
                  }}
                />
              )}
            </span>
            <span className="LidoStakeFormInputContainerSpan2">
              <input
                disabled={!state.sender && !context.accountId}
                className="LidoStakeFormInputContainerSpan2Input"
                value={state.stAmount}
                onChange={(e) => State.update({ stAmount: e.target.value })}
                placeholder="Amount"
              />
            </span>
            <span
              class="LidoStakeFormInputContainerSpan3"
              onClick={() => {
                State.update({
                  stAmount: parseFloat(state.balance).toFixed(2),
                });
              }}
            >
              <button
                className="LidoStakeFormInputContainerSpan3Content"
                disabled={!state.sender && !context.accountId}
              >
                <span className="LidoStakeFormInputContainerSpan3Max">MAX</span>
              </button>
            </span>
          </div>
          {!!state.sender || context.accountId ? (
            <button
              className="LidoStakeFormSubmitContainer"
              onClick={() => onBtnClick()}
            >
              <span>Stake</span>
            </button>
          ) : (
            <Web3Connect
              className="LidoStakeFormSubmitContainer"
              connectLabel="Connect with Web3"
            />
          )}
        </div>
      </div>
    </div>

    {/* fin */}
  </Theme>
);